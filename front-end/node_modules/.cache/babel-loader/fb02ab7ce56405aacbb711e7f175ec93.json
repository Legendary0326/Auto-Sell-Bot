{"ast":null,"code":"import _slicedToArray from\"D:/Work Space/Auto-Sell-Bot/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _readOnlyError from\"D:/Work Space/Auto-Sell-Bot/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/readOnlyError\";import React,{useState,useEffect,useRef}from'react';import{useEthers}from\"@usedapp/core\";import Modal from'react-bootstrap/Modal';import{Toast}from'react-bootstrap';import metamask from\"../../assets/icons/metamask.svg\";import{useWeb3React}from\"@web3-react/core\";import{WalletConnectConnector}from\"@web3-react/walletconnect-connector\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var MyModal=function MyModal(_ref){var isOpen=_ref.isOpen,setIsOpen=_ref.setIsOpen,onlyOneToast=_ref.onlyOneToast;///////////////////trust-wallet////////////////////////\n// const context = useWeb3React();\nvar _useWeb3React=useWeb3React(),connector=_useWeb3React.connector,library=_useWeb3React.library,accountConnect=_useWeb3React.account,chainIdConnect=_useWeb3React.chainId,activate=_useWeb3React.activate,active=_useWeb3React.active,error=_useWeb3React.error;///////////////////end-trust-wallet////////////////////\nvar unmounted=useRef(true);var _useState=useState(isOpen),_useState2=_slicedToArray(_useState,2),show=_useState2[0],setShow=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),showToast=_useState4[0],setShowToast=_useState4[1];var _useEthers=useEthers(),activateBrowserWallet=_useEthers.activateBrowserWallet,deactivate=_useEthers.deactivate,account=_useEthers.account,chainId=_useEthers.chainId;var handleClose=function handleClose(){return setIsOpen(false);};var walletconnect=new WalletConnectConnector({rpc:{56:\"https://bsc-dataseed.binance.org/\"},bridge:\"https://bridge.walletconnect.org\",qrcode:true,pollingInterval:12000});useEffect(function(){console.log('accountConnect',accountConnect);if(accountConnect){//trustwallet\naccountConnect,_readOnlyError(\"account\");console.log('chainId',chainId);}if(chainIdConnect)//trustwallet\nchainIdConnect,_readOnlyError(\"chainId\");if(account&&!onlyOneToast&&!(chainId==56||chainId==97)){setShowToast(true);deactivate();}return function(){unmounted.current=false;};},[accountConnect,chainId,chainIdConnect,active]);function handleConnectWalletMeta(){activateBrowserWallet();handleClose();}function handleConnectWalletTrust(){activate(walletconnect);}function handleDisconnectWallet(){deactivate();handleClose();}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Modal,{show:isOpen,onHide:handleClose,children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsx(Modal.Title,{children:\"Connect Wallet\"})}),/*#__PURE__*/_jsxs(Modal.Body,{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"outer bg-black absolute top-0 left-0 h-full w-full z-20 opacity-80\"}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute top-0 left-0 h-full w-full z-30 flex items-center justify-center\",onClick:function onClick(){return handleClose();},children:/*#__PURE__*/_jsx(\"div\",{className:\"inner max-w-screen-sm flex-grow  text-white  bg-gradient-to-br from-yellow-200 to-yellow-700 p-1 opacity-100 rounded-3xl\",onClick:function onClick(e){e.stopPropagation();},children:account&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{\"data-bs-dismiss\":\"modal\",id:\"wallet-connect-metamask\",className:\"c-list border-b px-3 py-2 d-flex align-items-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-white col-12 m-auto\",children:[\" \",/*#__PURE__*/_jsx(\"span\",{style:{wordBreak:'break-all'},children:account})]})}),/*#__PURE__*/_jsxs(\"div\",{\"data-bs-dismiss\":\"modal\",id:\"wallet-connect-metamask\",className:\"c-list border-b px-3 py-2 d-flex align-items-center cursor-pointer\",children:[/*#__PURE__*/_jsx(\"a\",{href:\"https://bscscan.com/address/\"+account,target:\"_blank\",className:\"text-white m-auto\",children:\" View on BSCScan \"}),/*#__PURE__*/_jsx(\"a\",{className:\"text-white m-auto\",onClick:handleDisconnectWallet,children:\" Disconnect\"})]})]})||/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{\"data-bs-dismiss\":\"modal\",id:\"wallet-connect-metamask\",className:\"c-list border-b px-3 py-2 d-flex align-items-center cursor-pointer\",onClick:handleConnectWalletMeta,children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-white mr-auto\",children:\" MetaMask\"}),/*#__PURE__*/_jsx(\"img\",{src:metamask,width:\"30px\",className:\"me-2\",alt:\"casperpad\"})]})})})})]})]}),/*#__PURE__*/_jsxs(Toast,{onClose:function onClose(){return setShowToast(false);},show:showToast,delay:7000,autohide:true,children:[/*#__PURE__*/_jsxs(Toast.Header,{children:[/*#__PURE__*/_jsx(\"img\",{src:\"holder.js/20x20?text=%20\",className:\"rounded me-2\",alt:\"\"}),/*#__PURE__*/_jsx(\"strong\",{className:\"me-auto\",children:\"Notice\"}),/*#__PURE__*/_jsx(\"small\",{className:\"mr-auto\"})]}),/*#__PURE__*/_jsx(Toast.Body,{children:\"Your wallet must connect to the Ethereum mainnet!\"})]})]});};export default MyModal;","map":{"version":3,"sources":["D:/Work Space/Auto-Sell-Bot/front-end/src/components/modal/Modal.js"],"names":["React","useState","useEffect","useRef","useEthers","Modal","Toast","useWeb3React","WalletConnectConnector","MyModal","isOpen","setIsOpen","onlyOneToast","connector","library","accountConnect","account","chainIdConnect","chainId","activate","active","error","unmounted","show","setShow","showToast","setShowToast","activateBrowserWallet","deactivate","handleClose","walletconnect","rpc","bridge","qrcode","pollingInterval","console","log","current","handleConnectWalletMeta","handleConnectWalletTrust","handleDisconnectWallet","e","stopPropagation","wordBreak","metamask"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useEthers } from \"@usedapp/core\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { Toast } from 'react-bootstrap';\r\nimport metamask from \"../../assets/icons/metamask.svg\";\r\nimport {\r\n  useWeb3React\r\n} from \"@web3-react/core\";\r\nimport { WalletConnectConnector } from \"@web3-react/walletconnect-connector\";\r\n\r\nconst MyModal = ({ isOpen, setIsOpen, onlyOneToast}) => {\r\n  ///////////////////trust-wallet////////////////////////\r\n  // const context = useWeb3React();\r\n  const {\r\n    connector,\r\n    library,\r\n    account: accountConnect,\r\n    chainId: chainIdConnect,\r\n    activate,\r\n    active,\r\n    error\r\n  } = useWeb3React();\r\n  ///////////////////end-trust-wallet////////////////////\r\n    const unmounted = useRef(true);\r\n    const [show, setShow] = useState(isOpen);\r\n    const [showToast, setShowToast] = useState(false);\r\n    const { activateBrowserWallet, deactivate, account, chainId } = useEthers();\r\n    const handleClose = () => setIsOpen(false);\r\n    const walletconnect = new WalletConnectConnector({\r\n      rpc: { 56: \"https://bsc-dataseed.binance.org/\" },\r\n      bridge: \"https://bridge.walletconnect.org\",\r\n      qrcode: true,\r\n      pollingInterval: 12000\r\n    });\r\n\r\n    useEffect( () => {\r\n        console.log('accountConnect', accountConnect);\r\n        if(accountConnect){ //trustwallet\r\n          account = accountConnect;\r\n          console.log('chainId', chainId);\r\n        }\r\n        if(chainIdConnect) //trustwallet\r\n          chainId = chainIdConnect;\r\n        \r\n        if(account && !onlyOneToast && !(chainId == 56 || chainId == 97)){\r\n            setShowToast(true);\r\n            deactivate();\r\n        }\r\n        return () => { unmounted.current = false }\r\n    }, [accountConnect, chainId, chainIdConnect, active]);\r\n\r\n    function handleConnectWalletMeta(){\r\n        activateBrowserWallet();\r\n        handleClose();\r\n    }\r\n\r\n    function handleConnectWalletTrust() {\r\n      activate(walletconnect);\r\n    }\r\n\r\n    function handleDisconnectWallet(){\r\n        deactivate();\r\n        handleClose();\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Modal show={isOpen} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Connect Wallet</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body className=\"text-center\">\r\n              \r\n          <div className=\"outer bg-black absolute top-0 left-0 h-full w-full z-20 opacity-80\"></div>\r\n\r\n            <div className=\"absolute top-0 left-0 h-full w-full z-30 flex items-center justify-center\" onClick={() => handleClose()} >\r\n                <div className=\"inner max-w-screen-sm flex-grow  text-white  bg-gradient-to-br from-yellow-200 to-yellow-700 p-1 opacity-100 rounded-3xl\" onClick={ (e) => { e.stopPropagation(); }} >\r\n                    {account && (\r\n                        <>\r\n                            <div data-bs-dismiss=\"modal\" id=\"wallet-connect-metamask\" className=\"c-list border-b px-3 py-2 d-flex align-items-center\">\r\n                                <div className=\"text-white col-12 m-auto\"> <span style={{wordBreak: 'break-all'}}>{account}</span></div>\r\n                            </div>\r\n                            <div data-bs-dismiss=\"modal\" id=\"wallet-connect-metamask\" className=\"c-list border-b px-3 py-2 d-flex align-items-center cursor-pointer\">\r\n                                <a href={\"https://bscscan.com/address/\" + account} target=\"_blank\" className=\"text-white m-auto\"> View on BSCScan </a>\r\n                                <a className=\"text-white m-auto\" onClick={ handleDisconnectWallet }> Disconnect</a>\r\n                            </div>\r\n                        </>\r\n                    ) || (\r\n                        <>\r\n                            <div data-bs-dismiss=\"modal\" id=\"wallet-connect-metamask\" className=\"c-list border-b px-3 py-2 d-flex align-items-center cursor-pointer\" onClick={ handleConnectWalletMeta }>\r\n                                <div className=\"text-white mr-auto\"> MetaMask</div>\r\n                                <img src={metamask} width=\"30px\" className=\"me-2\" alt=\"casperpad\" />\r\n                            </div>\r\n                            {/* <div data-bs-dismiss=\"modal\" id=\"wallet-connect-binance chain wallet\" className=\"c-list border-b px-3 py-2 d-flex align-items-center cursor-pointer\" onClick={ handleConnectWalletMeta }>\r\n                                <div className=\"text-white mr-auto\"> Binance Chain Wallet</div>\r\n                                <img src={binance} className=\"me-2\" alt=\"casperpad\" />\r\n                            </div> */}\r\n                            {/* <div data-bs-dismiss=\"modal\" id=\"wallet-connect-binance chain wallet\" className=\"c-list border-b px-3 py-2 d-flex align-items-center cursor-pointer\" onClick={ handleConnectWalletTrust }>\r\n                                <div className=\"text-white mr-auto\"> Wallet Connect</div>\r\n                                <img src={walletconnect_img} className=\"me-2 trustwallet\" alt=\"casperpad\" />\r\n                            </div> */}\r\n                        </>\r\n                    )}\r\n                </div>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n        <Toast onClose={() => setShowToast(false)} show={showToast} delay={7000} autohide>\r\n          <Toast.Header>\r\n            <img\r\n              src=\"holder.js/20x20?text=%20\"\r\n              className=\"rounded me-2\"\r\n              alt=\"\"\r\n            />\r\n            <strong className=\"me-auto\">Notice</strong>\r\n            <small className=\"mr-auto\"></small>\r\n          </Toast.Header>\r\n          <Toast.Body>Your wallet must connect to the Ethereum mainnet!</Toast.Body>\r\n        </Toast>\r\n      </>\r\n    );\r\n  }\r\n  \r\n  export default MyModal;"]},"metadata":{},"sourceType":"module"}